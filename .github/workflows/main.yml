# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    env:
      GODOT_VERSION: "4.4.1-stable"   # реальный релиз Godot

    steps:
      # ────────────────────────────────────────────────────────────────
      # Исходники
      # ────────────────────────────────────────────────────────────────
      - name: Checkout repository
        uses: actions/checkout@v4

      # ────────────────────────────────────────────────────────────────
      # Go‑toolchain + кеш
      # ────────────────────────────────────────────────────────────────
      - name: Setup Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('Server/server/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: go vet
        working-directory: Server/server
        run: go vet ./...

      - name: staticcheck
        working-directory: Server/server
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      - name: Go tests (unit + integration)
        working-directory: Server/server
        run: |
          go test ./... -coverprofile=coverage.out -v

      - uses: actions/upload-artifact@v4
        with:
          name: go-coverage
          path: Server/server/coverage.out

      # ────────────────────────────────────────────────────────────────
      # Godot + экспортные шаблоны
      # ────────────────────────────────────────────────────────────────
      - name: Setup Godot
        uses: lihop/setup-godot@v2
        with:
          version: ${{ env.GODOT_VERSION }}
          alias: godot
          cache: true
          export-templates: true
      - name: Import Godot resources (required for GUT)
        working-directory: CardGame
        run: godot --headless --import

      # ────────────────────────────────────────────────────────────────
      # Python & gdtoolkit
      # ────────────────────────────────────────────────────────────────
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - run: pip install --upgrade gdtoolkit
        name: Install gdtoolkit (gdlint / gdformat)

      - name: Check GDScript formatting (scripts only)
        continue-on-error: true
        working-directory: CardGame/scripts
        run: gdformat --check .

      - name: Lint GDScript (scripts only)
        continue-on-error: true
        working-directory: CardGame/scripts
        run: gdlint .

      # ────────────────────────────────────────────────────────────────
      # GUT tests
      # ────────────────────────────────────────────────────────────────
      - name: Run GUT tests
        working-directory: CardGame
        run: |
          godot --headless \
            -s addons/gut/gut_cmdln.gd \
            -gdir=res://tests \
            -gexit \
            -gjunit_xml_file=res://tests/report.xml

      - uses: actions/upload-artifact@v4
        with:
          name: gut-report
          path: CardGame/tests/report.xml

      # ────────────────────────────────────────────────────────────────
      # Build Windows export
      # ────────────────────────────────────────────────────────────────
      - name: Export game for Windows
        continue-on-error: true
        working-directory: CardGame
        run: |
          mkdir -p ../build/windows
          godot --headless --path . --export-release "Windows Desktop" ../build/windows/CardGame.exe

      - name: Upload Windows build artifact
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: CardGame-windows
          path: build/windows

      # # ────────────────────────────────────────────────────────────────
      # # Java + Android SDK (для Android экспорта)
      # # ────────────────────────────────────────────────────────────────
      # - name: Setup Java 17 (Godot requirement)
      #   uses: actions/setup-java@v4
      #   with:
      #     distribution: "temurin"
      #     java-version: "17"

      # - name: Setup Android SDK
      #   continue-on-error: true  # не ронять workflow, если Android SDK пакеты недоступны
      #   uses: android-actions/setup-android@v3
      #   with:
      #     packages: "platform-tools platforms;android-33 build-tools;33.0.2"

      # - name: Download Android build template
      #   continue-on-error: true  
      #   working-directory: CardGame
      #   run: |
      #     wget https://github.com/godotengine/godot/releases/download/4.4.1-stable/Godot_v4.4.1-stable_export_templates.tpz
      #     mkdir -p android/build
      #     unzip -o Godot_v4.4.1-stable_export_templates.tpz android_source.zip
      #     unzip -o android_source.zip -d android/build

      # # ────────────────────────────────────────────────────────────────
      # # Build Android export (debug apk, без keystore)
      # # ────────────────────────────────────────────────────────────────
      # - name: Export game for Android (debug)
      #   continue-on-error: true
      #   working-directory: CardGame
      #   run: |
      #     mkdir -p ../build/android
      #     godot --headless --path . --export-debug "Android" ../build/android/CardGame-debug.apk

      # - name: Upload Android build artifact
      #   continue-on-error: true
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: CardGame-android-debug
      #     path: build/android

      # # ────────────────────────────────────────────────────────────────
      # # Build macOS export (unsigned)
      # # ────────────────────────────────────────────────────────────────
      # - name: Export game for macOS (universal, unsigned)
      #   continue-on-error: true
      #   working-directory: CardGame
      #   run: |
      #     mkdir -p ../build/macos
      #     godot --headless --path . --export-release "macOS" ../build/macos/CardGame.app
      #     cd ../build/macos && zip -r CardGame-mac.zip CardGame.app

      # - name: Upload macOS build artifact
      #   continue-on-error: true
      #   uses: actions/upload-artifact@v4
      #   with:
          name: CardGame-macos
          path: build/macos/CardGame-mac.zip
