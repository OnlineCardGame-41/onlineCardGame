name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    env:
      # Используем доступный релиз Godot 4.4.1
      GODOT_VERSION: "4.4.1-stable"

    steps:
      # ────────────────────────────────────────────────────────────────
      # Исходники
      # ────────────────────────────────────────────────────────────────
      - name: Checkout repository
        uses: actions/checkout@v4

      # ────────────────────────────────────────────────────────────────
      # Go‑toolchain + кеш
      # ────────────────────────────────────────────────────────────────
      - name: Setup Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('Server/server/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: go vet
        working-directory: Server/server
        run: go vet ./...

      - name: staticcheck
        working-directory: Server/server
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      - name: Go tests (unit + integration)
        working-directory: Server/server
        run: |
          go test ./... -coverprofile=coverage.out -v

      - name: Upload Go coverage
        uses: actions/upload-artifact@v4
        with:
          name: go-coverage
          path: Server/server/coverage.out

      # ────────────────────────────────────────────────────────────────
      # Godot headless
      # ────────────────────────────────────────────────────────────────
      - name: Setup Godot
        uses: lihop/setup-godot@v2
        with:
          version: ${{ env.GODOT_VERSION }}
          alias: godot
          cache: true

      # ────────────────────────────────────────────────────────────────
      # Python & gdtoolkit
      # ────────────────────────────────────────────────────────────────
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install gdtoolkit (gdlint / gdformat)
        run: pip install --upgrade gdtoolkit

      - name: Check GDScript formatting (scripts only)
        working-directory: CardGame/scripts
        run: gdformat .

      - name: Lint GDScript (scripts only)
        working-directory: CardGame/scripts
        run: gdlint .

      # ────────────────────────────────────────────────────────────────
      # GUT tests
      # ────────────────────────────────────────────────────────────────
      - name: Run GUT tests
        working-directory: CardGame
        run: |
          godot --no-window --headless \
            -s addons/gut/gut_cmdln.gd \
            -gdir=res://tests \
            -gexit \
            -gjunit_xml_file=res://tests/report.xml

      - name: Upload GUT JUnit report
        uses: actions/upload-artifact@v4
        with:
          name: gut-report
          path: CardGame/tests/report.xml
