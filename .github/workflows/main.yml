name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      GODOT_VERSION: "4.4.stable"

    steps:
      # ---------------------------------------------------------------------
      # Checkout repository
      # ---------------------------------------------------------------------
      - uses: actions/checkout@v4

      # ---------------------------------------------------------------------
      # Go toolâ€‘chain & cache
      # ---------------------------------------------------------------------
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/Server/server/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: go vet ./...
        working-directory: Server/server
        run: go vet ./...

      - name: Run Go tests (unit + integration)
        working-directory: Server/server
        run: |
          go test ./... -coverprofile=coverage.out -v

      - name: Upload Go coverage
        uses: actions/upload-artifact@v4
        with:
          name: go-coverage
          path: Server/server/coverage.out

      # ---------------------------------------------------------------------
      # Godot headless + GDScript tooling
      # ---------------------------------------------------------------------
      - name: Set up Godot (headless)
        uses: lihop/setup-godot@v2
        with:
          version: ${{ env.GODOT_VERSION }}
          alias: godot

      - name: Install gdtoolkit (gdlint / gdformat)
        run: pip install gdtoolkit

      - name: Lint GDScript
        working-directory: CardGame
        run: gdlint -e .

      - name: Run GUT tests
        working-directory: CardGame
        run: |
          godot -q --headless \
            -s addons/gut/gut_cmdln.gd \
            -gdir=res://tests \
            -gexit \
            -gjunit_xml_file=res://tests/report.xml

      - name: Upload GUT JUnit report
        uses: actions/upload-artifact@v4
        with:
          name: gut-report
          path: CardGame/tests/report.xml
